import{_ as l,V as d,n as r,p as c,q as e,C as i,A as t,J as n,a7 as o}from"./framework-9e5333fd.js";const u={},m=e("h1",{id:"generic-panels-and-no-panel-installation-and-integration",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#generic-panels-and-no-panel-installation-and-integration","aria-hidden":"true"},"#"),n(" Generic panels and no-panel installation and integration")],-1),v={class:"table-of-contents"},p=e("h2",{id:"introduction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#"),n(" Introduction")],-1),h=e("p",null,"Imunify360 can be installed directly on the server, independent of any panel, regardless of the administrative interface. It is also called stand-alone, non-panel, generic panel integration.",-1),g=e("h4",{id:"limitations",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#limitations","aria-hidden":"true"},"#"),n(" Limitations")],-1),b=o('<h4 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h4><p><strong>Operating system</strong></p><ul><li>CentOS 6/7/8</li><li>RHEL 6/7</li><li>CloudLinux OS</li><li>Ubuntu 16.04/18.04/20.04/22</li><li>Debian 9/10</li><li>Rocky Linux 8</li></ul><p><strong>Web servers</strong></p><ul><li>Apache &gt;= 2.4.30</li><li>LiteSpeed</li><li>Nginx</li></ul><h4 id="there-are-four-main-steps-in-general-required-for-having-imunify360-stand-alone-running-on-your-server" tabindex="-1"><a class="header-anchor" href="#there-are-four-main-steps-in-general-required-for-having-imunify360-stand-alone-running-on-your-server" aria-hidden="true">#</a> There are four main steps in general required for having Imunify360 Stand-alone running on your server:</h4>',6),f=e("li",null,[n("Create "),e("a",{href:"https://cloudlinux.zendesk.com/hc/en-us/article_attachments/10897631373852?_gl=1*24p3t*_ga*MTM5OTQ3NjE3OC4xNjk3NjM2MDk2*_up*MQ..*_ga_8LBSSX7VQX*MTY5NzYzNjA5NC4xLjAuMTY5NzYzNjA5NC4wLjAuMA..*_ga_1RCQ134PYC*MTY5NzYzNjA5NC4xLjAuMTY5NzYzNjA5NC4wLjAuMA..*_ga_V4QHJSZM47*MTY5NzYzNjA5NC4xLjAuMTY5NzYzNjA5NC4wLjAuMA..",target:"_blank",rel:"noopener noreferrer"},"integration.conf"),n(" file to configure Imunify360 integrations such as authentication, "),e("span",{class:"notranslate"},[e("code",null,"mod_security")]),n(" settings and WEB server scripts.")],-1),q=e("li",null,[n("Install Imunify360 using the "),e("a",{href:"https://docs.imunify360.com/control_panel_integration/#install-imunify360",target:"_blank",rel:"noopener noreferrer"},"deploy script")],-1),x=e("li",null,[n("Check the "),e("a",{href:"https://docs.imunify360.com/faq_and_known_issues/#_15-how-to-check-modsecurity-scan-works",target:"_blank",rel:"noopener noreferrer"},"installed modules work"),n(" and change the Imunify360 settings to reflect your needs.")],-1),y=o(`<div class="warning custom-block"><p class="custom-block-title">Warning</p><p>Imunify Web-UI PHP code has to be executed under a non-root user which has access to <code>/var/run/defence360agent/non_root_simple_rpc.sock</code>. If it runs in CageFS, you&#39;ll need to configure it accordingly.</p></div><p>To allow non-root user in CageFS access to the socket, this workaround should be applied:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># create directory for moun-point
mkdir /imunify-ui-shared
# add symlink for user which belong to UI backend \`imunify-web\` in this example)
ln -s /var/run/defence360agent /imunify-ui-shared/imunify-web
# add symlink to cagefs skeleton
rm -f /usr/share/cagefs-skeleton/var/run/defence360agent
ln -s /imunify-ui-shared/imunify-web /usr/share/cagefs-skeleton/var/run/defence360agent
# add mount point to cagefs
echo &quot;%/imunify-ui-shared&quot; &gt;&gt; /etc/cagefs/cagefs.mp
# remount all
cagefsctl --remount-all
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="prerequisites" tabindex="-1"><a class="header-anchor" href="#prerequisites" aria-hidden="true">#</a> Prerequisites</h2><p>Imunify360 Stand-alone version requires the following components installed or enabled at the server:</p><ul><li>ModSecurity 2.9.x for Apache or ModSecurity 3.0.x for Nginx</li><li>Apache module <span class="notranslate"><code>mod_remoteip</code></span> or nginx module <span class="notranslate"><code>ngx_http_realip_module</code></span></li><li>PHP with <span class="notranslate"><code>json</code></span> extension loaded and <span class="notranslate"><code>proc_open</code></span> function enabled (remove it from the <span class="notranslate"><code>disable_functions</code></span> list in <span class="notranslate"><code>php.ini</code></span>)</li></ul><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>We recommend using the stable versions of ModSecurity3 (i.e. 3.0.4), because developing versions (i.e. master) can have stability issues (see <a href="https://github.com/SpiderLabs/ModSecurity/issues/2381" target="_blank" rel="noopener noreferrer">https://github.com/SpiderLabs/ModSecurity/issues/2381</a> for example).</p></div><h2 id="configure-imunify360-integrations" tabindex="-1"><a class="header-anchor" href="#configure-imunify360-integrations" aria-hidden="true">#</a> Configure Imunify360 integrations</h2><p>Imunify360 Stand-alone version requires the following integrations before installation:</p><ul><li>Specifying panel information</li><li>Integration with web server for serving UI</li><li>Interaction with ModSecurity</li><li>Integration with WebShield</li><li>Integration with Malware Scanner</li><li>Integration with authentication service</li><li>Define administrators for Imunify360</li></ul>`,10),_=e("span",{class:"notranslate"},[e("code",null,"/etc/sysconfig/imunify360/integration.conf")],-1),w=e("a",{href:"https://cloudlinux.zendesk.com/guide-media/01HD1FQ947RNZB4PYXRVA3PMM0",target:"_blank",rel:"noopener noreferrer"},"template",-1),I=e("a",{href:"https://cloudlinux.zendesk.com/hc/en-us/articles/4716287786396",target:"_blank",rel:"noopener noreferrer"},"Knoledgebase article",-1),S=o(`<h4 id="specifying-panel-information" tabindex="-1"><a class="header-anchor" href="#specifying-panel-information" aria-hidden="true">#</a> Specifying panel information</h4><p>To specify information about your hosting panel in Imunify360/ImunifyAV, use the <code>panel_info</code> option in the <code>[integration_scripts]</code> section of <code>integration.conf</code> file.</p><div class="warning custom-block"><p class="custom-block-title"></p><p>This is a mandatory field and must be specified prior to the start of the installation.</p></div><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[integration_scripts]
panel_info = /path/to/info/script.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div><p>The option should contain a full path to the executable that prints JSON data in the following format:</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
    &quot;data&quot;: {
        &quot;name&quot;: &quot;MyHostingPanel&quot;,
        &quot;version&quot;: &quot;1.23.4&quot;
    },
    &quot;metadata&quot;: {
        &quot;result&quot;: &quot;ok&quot;
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h4 id="integration-with-web-server" tabindex="-1"><a class="header-anchor" href="#integration-with-web-server" aria-hidden="true">#</a> Integration with web server</h4><p>Imunify360 UI is implemented as a single-page application (SPA) and requires a web server to serve it. Itâ€™s required to specify a path to the web server directory, where the Imunify360 UI SPA application will be installed and served.</p><p>Example</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[paths]
ui_path = /var/www/vhosts/imunify360/imunify360.hosting.example.com/html/im360
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div><p>Ensure that the domain you are going to use for the Imunify360 web-based UI refers to this path and that there are no other scripts or files under <span class="notranslate"><code>ui_path</code></span>, as they might be overridden by Imunify360 installation.</p><h4 id="apache-and-litespeed" tabindex="-1"><a class="header-anchor" href="#apache-and-litespeed" aria-hidden="true">#</a> Apache and LiteSpeed</h4><p>Configure <a href="https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-%28v2.x%29#Configuration_Directives" target="_blank" rel="noopener noreferrer">ModSecurity configuration directives</a> (so that it can block):</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SecAuditEngine RelevantOnly
SecConnEngine Off
SecRuleEngine On
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>Create the empty file <span class="notranslate"><code>/etc/sysconfig/imunify360/generic/modsec.conf</code></span> and include it into the web server config as <span class="notranslate"><code>IncludeOptional</code></span>. The file would be replaced with the actual config during the first Imunify360 installation or you can fill it via calling the Imunify360 ModSec ruleset installation <span class="notranslate"><code>imunify360-agent install-vendors</code></span>.</p><h4 id="nginx" tabindex="-1"><a class="header-anchor" href="#nginx" aria-hidden="true">#</a> Nginx</h4><div class="tip custom-block"><p class="custom-block-title">Note</p><p>ModSecurity has different syntax comparing to Nginx configuration, thus ModSecurity directives can not be directly included to the Nginx config files.</p></div><p>Create a separate file (i.e. <span class="notranslate"><code>/etc/nginx/modsec.conf</code></span>) and set the following ModSecurity directives in it:</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SecAuditEngine RelevantOnly
SecConnEngine Off
SecRuleEngine On
SecAuditLogFormat JSON
# should match modsec_audit_log option in integration.conf (see below)
SecAuditLog /var/log/nginx/modsec_audit_log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="danger custom-block"><p class="custom-block-title">Warning</p><p>ModSecurity on Nginx does not properly re-opens audit log on SIGHUP/SIGUSR1, which can cause logrotate to break integration with Imunify360. See <a href="https://github.com/SpiderLabs/ModSecurity-nginx/issues/121" target="_blank" rel="noopener noreferrer">https://github.com/SpiderLabs/ModSecurity-nginx/issues/121</a> for details.</p></div><p>Create an empty file <span class="notranslate"><code>/etc/sysconfig/imunify360/generic/modsec.conf</code></span>. The file would be replaced with the actual config during the first Imunify360 installation or you can fill it via calling the Imunify360 ModSec ruleset installation <span class="notranslate"><code>imunify360-agent install-vendors</code></span>.</p><p>Then enable ModSecurity and include both files into Nginx configuration using the <span class="notranslate"><code>modsecurity_rules_file</code></span> directive:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>modsecurity on;
modsecurity_rules_file /etc/nginx/modsec.conf;
modsecurity_rules_file /etc/sysconfig/imunify360/generic/modsec.conf;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="imunify360-integration-configuration" tabindex="-1"><a class="header-anchor" href="#imunify360-integration-configuration" aria-hidden="true">#</a> Imunify360 integration configuration</h4><p>Set the path and graceful restart script in the <span class="notranslate"><code>integration.conf</code></span></p><ul><li><span class="notranslate"><code>[web_server].graceful_restart_script</code></span> â€“ a script that restarts the web server to be called after any changes in web server config or ModSecurity rules</li><li><span class="notranslate"><code>[web_server].config_test_script</code></span> â€“ a script that checks the web server&#39;s config to be called after any changes in the web server config or ModSecurity rules (optional)</li><li><span class="notranslate"><code>[web_server].modsec_audit_log</code></span> â€“ a path to ModSecurity audit log file</li><li><span class="notranslate"><code>[web_server].modsec_audit_logdir</code></span> â€“ a path to ModSecurity audit log directory (required when the <span class="notranslate"><code>SecAuditLogType</code></span> set to the <span class="notranslate"><code>Concurrent</code></span>)</li></ul><p>Example</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[web_server]
server_type = apache
graceful_restart_script = /usr/sbin/apachectl restart
config_test_script = /usr/sbin/apachectl -t
modsec_audit_log = /var/log/httpd/modsec_audit.log
modsec_audit_logdir = /var/log/modsec_audit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>To enable domain-specific ModSecurity configuration, specify the <span class="notranslate"><code>modsec_domain_config_script</code></span> in the <span class="notranslate"><code>integration.conf</code></span>.</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[integration_scripts]
modsec_domain_config_script = /path/to/inject/domain/specific/config/script.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div><p>It should point to an executable file that accepts as an input a list of domain-specific web server settings and injects them into the server config. The standard input (stdin) is given in the <a href="http://jsonlines.org/" target="_blank" rel="noopener noreferrer">JSON Lines</a> format similar to the following:</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{&quot;user&quot;: &quot;username&quot;, &quot;domain&quot;: &quot;example.com&quot;, &quot;content&quot;: &quot;modsec config text&quot;}
{&quot;user&quot;: &quot;another&quot;, &quot;domain&quot;: &quot;another.example.com&quot;, &quot;content&quot;: &quot;...&quot;}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div><p>Each line contains config for a single domain e.g., it may contain rule tags excluded for the domain. The script should also restart the web server to apply the configuration. This should be done so that the script could implement the check that web server comes up after config change, and reset configuration if it doesn&#39;t.</p><p>If configuration change failed, the script should return 1, and in the standard error stream (stderr) it should return the reason for failure. On success, the script should return 0. In a single run of the script, we might update a single domain/user, as well as multiple users (all users) on the system.</p><h4 id="integration-with-webshield" tabindex="-1"><a class="header-anchor" href="#integration-with-webshield" aria-hidden="true">#</a> Integration with WebShield</h4><p>WebShield consists of four services:</p><ul><li>WebShield itself</li><li>Shared memory daemon makes it easier to deal with certain aspects of Nginx configuration without reloading</li><li>SSL-caching daemon watches changes to host SSL certificate sets (for known hosting panels only: cPanel, Plesk, DirectAdmin) and updates the WebShield SSL cache when a certificate is added, updated or removed</li><li>Sentrylogs daemon watches WebShield log files to detect errors</li></ul><p>The configuration of WebShield is done by an agent, and direct editing of WebShield configuration files is generally not recommended. This is mainly because after the next reconfiguration all custom changes would be lost. However, a host administrator is allowed to set a certificate as the default one for WebShield to return.</p><h4 id="how-to-enable-webshield-in-the-imunify360-config-file-and-start-the-service" tabindex="-1"><a class="header-anchor" href="#how-to-enable-webshield-in-the-imunify360-config-file-and-start-the-service" aria-hidden="true">#</a> How to enable WebShield in the Imunify360 config file and start the service</h4><p>When Imunify360 stand-alone is installed, WebShield is disabled by default.</p><p>You can enable it only via CLI. To do so, run the following commands:</p><ol><li><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> imunify360-agent config update &#39;{&quot;WEBSHIELD&quot;: {&quot;enable&quot;: true, &quot;known_proxies_support&quot;: true}}&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> systemctl enable imunify360-webshield
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> systemctl restart imunify360-webshield
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h4 id="set-default-ssl-certificate-explicitly" tabindex="-1"><a class="header-anchor" href="#set-default-ssl-certificate-explicitly" aria-hidden="true">#</a> Set default SSL certificate explicitly</h4><ol><li>Place a certificate and a key into the <span class="notranslate"><code>/etc/imunify360-webshield/ssl_certs</code></span> folder</li><li>If required, in the <span class="notranslate"><code>/etc/imunify360-webshield/ssl.conf</code></span> file, change the following directives according to your changes:</li></ol><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ssl_certificate             ssl_certs/dummy.pem;

ssl_certificate_key         ssl_certs/dummy.pem;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>If you want to provide intermediate certificates, they are to be appended to the certificate file.</p><p>These settings require WebShield to be restarted/reloaded.</p><h4 id="manage-webshield-ssl-cache-manually" tabindex="-1"><a class="header-anchor" href="#manage-webshield-ssl-cache-manually" aria-hidden="true">#</a> Manage WebShield SSL cache manually</h4><p>To manually manage the certificate cache, use the <span class="notranslate"><code>/usr/sbin/im360-ssl-cache</code></span> utility.</p><p>To add certificates to the cache, a user would run the command:</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>im360-ssl-cache --add /path/to/certs.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><p>The <span class="notranslate"><code>--add</code></span> parameter accepts exactly one value. If the parameter value is not <code>-</code>, it is taken as a path to a file in JSON format with a list of certificates and private keys to be added. Otherwise, if the parameter value is <code>-</code>, data is expected to be sent in JSON format to STDIN as in the following example:</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cat certs.json | im360-ssl-cache --add -
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><p>Format of JSON file:</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[
  {
      &quot;domain&quot;: &quot;john.example.com&quot;,
      &quot;key&quot;: &quot;-----BEGIN PRIVATE KEY-----\\nM...O\\n-----END PRIVATE KEY-----\\n&quot;,
      &quot;certificate&quot;: &quot;-----BEGIN CERTIFICATE-----\\nMI...Y=\\n-----END CERTIFICATE-----\\n&quot;,
      &quot;chain&quot;: &quot;-----BEGIN CERTIFICATE-----\\nM...I=\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nM...U=\\n-----END CERTIFICATE-----\\n&quot;
    },
    {
      &quot;domain&quot;: &quot;bob.example.com&quot;,
      &quot;key&quot;: &quot;...&quot;,
      &quot;certificate&quot;: &quot;...&quot;,
      &quot;chain&quot;: &quot;...&quot;
    }
]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="tip custom-block"><p class="custom-block-title">Note</p><p>As JSON text is not allowed to have line breaks, all newline symbols must be escaped as in the example above.</p></div><p>To remove certificate(s) from the cache, a user is expected to run the command:</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>im360-ssl-cache --remove example.org example.com â€¦
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><p>The <span class="notranslate"><code>--remove</code></span> parameter expects one or more space-separated domain names, for which certificates are to be removed from the cache.</p><p>When no parameters are passed, the <span class="notranslate"><code>im360-ssl-cache</code></span> simply lists all domain names of certificates in the cache.</p><div class="warning custom-block"><p class="custom-block-title">Note</p><p>Passing certificates data in JSON format is done to put data flow in good order, to avoid excessive checks of data. No certificate checks are made.</p></div><h4 id="non-sni-requests" tabindex="-1"><a class="header-anchor" href="#non-sni-requests" aria-hidden="true">#</a> Non-SNI requests</h4><p>When a request without Server Name Indication (SNI) comes, WebShield has to guess what certificate from the cache to serve.</p><p>To allow WebShield to handle non-SNI requests properly, include an <code>ip</code> field in the JSON that you pass to the <span class="notranslate"><code>im360-ssl-cache</code></span>.</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[
    {
        &quot;domain&quot;: &quot;...&quot;,
        &quot;key&quot;: &quot;...&quot;,
        &quot;certificate&quot;: &quot;...&quot;,
        &quot;chain&quot;: &quot;...&quot;,
        &quot;ip&quot;: &quot;...&quot;  // NEW, optional, NOT UNIQUE
    },..
]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>WebShield will use this data to decide which certificate to serve if a request without Server Name Indication (SNI) arrives. If there are several domains with the specified IPs, WebShield will use the first one alphabetically.</p><h4 id="required-web-server-configuration-to-correctly-detect-client-ip-addresses-from-headers" tabindex="-1"><a class="header-anchor" href="#required-web-server-configuration-to-correctly-detect-client-ip-addresses-from-headers" aria-hidden="true">#</a> Required web server configuration to correctly detect client IP addresses from headers</h4><p>To ensure WebShield and Graylist are working correctly (e.g. a correct IP is passed to ModSecurity), the server must recognize WebShield as an internal proxy. For example, for Apache, <code>mod_remoteip</code> must be installed and configured like this:</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;IfModule remoteip_module&gt;
    RemoteIPInternalProxy 127.0.0.1
    RemoteIPInternalProxy ::1
    RemoteIPHeader X-Forwarded-For
&lt;/IfModule&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>For Nginx, the <span class="notranslate"><code>ngx_http_realip_module</code></span> module should be configured in the following way:</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>real_ip_header X-Forwarded-For;
set_real_ip_from 127.0.0.1;
set_real_ip_from ::1;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>WebShield passes the real client IP in the <span class="notranslate"><code>X-Forwarded-For</code></span> header.</p><div class="tip custom-block"><p class="custom-block-title">Note</p><p>In the Apache LogFormat configuration strings for correct representation of a remote host IP address it is required using:</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>%a	Client IP address of the request
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><p>instead of</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>%h	Remote hostname
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><p>You can find more details at <a href="http://httpd.apache.org/docs/current/mod/mod_log_config.html" target="_blank" rel="noopener noreferrer">http://httpd.apache.org/docs/current/mod/mod_log_config.html</a>.</p></div><h4 id="integration-with-malware-scanner" tabindex="-1"><a class="header-anchor" href="#integration-with-malware-scanner" aria-hidden="true">#</a> Integration with Malware Scanner</h4><p>To scan files uploaded via FTP, configure <a href="https://www.pureftpd.org/project/pure-ftpd/" target="_blank" rel="noopener noreferrer">PureFTPd</a>. Write in the <span class="notranslate"><code>pure-ftp.conf</code></span>:</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>CallUploadScript             yes
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><p>To scan files for changes (to detect malware) using inotify, configure which directories to watch and which to ignore in the <span class="notranslate"><code>integration.conf</code></span> file:</p><ul><li>configure <span class="notranslate"><code>[malware].basedir</code></span> â€“ a root directory to watch (recursively)</li><li>configure <span class="notranslate"><code>[malware].pattern_to_watch</code></span> â€“ only directories that match this (<a href="https://docs.python.org/3/howto/regex.html#regex-howto" target="_blank" rel="noopener noreferrer">Python</a>) regex in the basedir are actually going to be watched</li></ul><p>Example</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[malware]
basedir = /home
pattern_to_watch = ^/home/.+?/(public_html|public_ftp|private_html)(/.*)?$
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h4 id="integration-with-authentication-service" tabindex="-1"><a class="header-anchor" href="#integration-with-authentication-service" aria-hidden="true">#</a> Integration with authentication service</h4><p>Imunify360 Stand-alone version can use PAM service to authenticate users for the Imunify360 UI application.</p><p>You can specify which PAM service Imunify360 should use with the <span class="notranslate"><code>service_name</code></span> option:</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[pam]
service_name = system-auth
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div>`,84),k=e("span",{class:"notranslate"},[e("code",null,"login")],-1),N=o(`<h4 id="define-administrators-for-imunify360" tabindex="-1"><a class="header-anchor" href="#define-administrators-for-imunify360" aria-hidden="true">#</a> Define administrators for Imunify360</h4><p>The administrators have full access to Imunify360 UI and its settings.</p><p>By default, <span class="notranslate"><code>root</code></span> is considered to be the only <span class="notranslate"><code>admin</code></span> user.</p><p>To add more administrators, list them in the <span class="notranslate"><code>/etc/sysconfig/imunify360/auth.admin</code></span> file or specify the admins option in the <span class="notranslate"><code>/etc/sysconfig/imunify360/integration.conf</code></span></p><p>Admin users will be merged from three sources: <span class="notranslate"><code>/etc/sysconfig/imunify360/auth.admin</code></span> list and scripts defined in the <span class="notranslate"><code>/etc/sysconfig/imunify360/integration.conf</code></span> or <span class="notranslate"><code>/opt/cpvendor/etc/integration.ini</code></span> that return user lists.</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[integration_scripts]
admins = /path/to/get-admins-script.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div><p>It should point to an executable file that generates a JSON file similar to the following:</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
  &quot;data&quot;: [
    {
      &quot;name&quot;: &quot;admin1&quot;,
      &quot;unix_user&quot;: &quot;admin&quot;,
      &quot;locale_code&quot;: &quot;EN_us&quot;,
      &quot;email&quot;: &quot;admin1@domain.zone&quot;,
      &quot;is_main&quot;: true
    },
	{
      &quot;name&quot;: &quot;admin2&quot;,
      &quot;unix_user&quot;: &quot;admin&quot;,
      &quot;locale_code&quot;: &quot;Ru_ru&quot;,
      &quot;email&quot;: &quot;admin2@domain.zone&quot;,
      &quot;is_main&quot;: false
    },
  ],
  &quot;metadata&quot;: {
    &quot;result&quot;: &quot;ok&quot;
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="install-imunify360" tabindex="-1"><a class="header-anchor" href="#install-imunify360" aria-hidden="true">#</a> Install Imunify360</h2>`,9),T=o(`<h2 id="settings-related-to-stand-alone-version" tabindex="-1"><a class="header-anchor" href="#settings-related-to-stand-alone-version" aria-hidden="true">#</a> Settings related to Stand-alone version</h2><p>The web-based UI is available via the domain configured in the <span class="notranslate"><code>ui_path</code></span>.</p><div class="tip custom-block"><p class="custom-block-title">Note</p><p>No files should be located in the folder configured with <span class="notranslate"><code>ui_path</code></span>. We do not recommend using a directory in which any files are stored as a directory for Imunify UI files.</p></div><p>For example, if <span class="notranslate"><code>/var/www/vhosts/imunify360/imunify360.hosting.example.com/html/im360</code></span> is the document root folder for the <span class="notranslate"><code>imunify360.hosting.example.com</code></span> domain, then you could open Imunify360 with the following URL:</p><ul><li><span class="notranslate"><code>https://imunify360.hosting.example.com/</code></span> (when you have TLS certificate configured for the domain) or</li><li><span class="notranslate"><code>http://imunify360.hosting.example.com/</code></span></li></ul><h4 id="use-a-specific-list-of-users-in-imunify360" tabindex="-1"><a class="header-anchor" href="#use-a-specific-list-of-users-in-imunify360" aria-hidden="true">#</a> Use a specific list of users in Imunify360</h4><p>By default, Imunify360 will use Linux system users, limited by <span class="notranslate"><code>uid_min</code></span> and <span class="notranslate"><code>uid_max</code></span> from the <span class="notranslate"><code>/etc/login.defs</code></span>.</p><p>If you want to see a specific list of users (note, that all of them must be real Linux users accessible via PAM), you can specify the <span class="notranslate"><code>users</code></span> option in the <span class="notranslate"><code>/etc/sysconfig/imunify360/integration.conf</code></span>:</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[integration_scripts]
users = /path/to/get-users-script.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div>`,9),M=o(`<div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
  &quot;data&quot;: [
    {
      &quot;id&quot;: 1000,
      &quot;username&quot;: &quot;ins5yo3&quot;,
      &quot;owner&quot;: &quot;root&quot;,
      &quot;domain&quot;: &quot;ins5yo3.com&quot;,
      &quot;package&quot;: {
        &quot;name&quot;: &quot;package&quot;,
        &quot;owner&quot;: &quot;root&quot;
      },
      &quot;email&quot;: &quot;ins5yo3@ins5yo3.com&quot;,
      &quot;locale_code&quot;: &quot;EN_us&quot;
    },
    {
      &quot;id&quot;: 1001,
      &quot;username&quot;: &quot;ins5yo4&quot;,
      &quot;owner&quot;: &quot;root&quot;,
      &quot;domain&quot;: &quot;ins5yo4.com&quot;,
      &quot;package&quot;: {
        &quot;name&quot;: &quot;package&quot;,
        &quot;owner&quot;: &quot;root&quot;
      },
      &quot;email&quot;: &quot;ins5yo4@ins5yo4.com&quot;,
      &quot;locale_code&quot;: &quot;EN_us&quot;
    }
  ],
  &quot;metadata&quot;: {
    &quot;result&quot;: &quot;ok&quot;
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h4 id="use-server-domains" tabindex="-1"><a class="header-anchor" href="#use-server-domains" aria-hidden="true">#</a> Use server domains</h4><p>To provide a list of domains for Imunify360, specify the script that generates a JSON file in the <span class="notranslate"><code>/etc/sysconfig/imunify360/integration.conf</code></span>:</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[integration_scripts]
domains = /path/to/get-domains-script.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div><p>A JSON file should be similar to the following:</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
  &quot;data&quot;: {
    &quot;example.com&quot;: {
      &quot;document_root&quot;: &quot;/home/username/public_html/&quot;,
      &quot;is_main&quot;: true,
      &quot;owner&quot;: &quot;username&quot;,
    },
    &quot;subdomain.example.com&quot;: {
      &quot;document_root&quot;: &quot;/home/username/public_html/subdomain/&quot;,
      &quot;is_main&quot;: false,
      &quot;owner&quot;: &quot;username&quot;,
    }
  },
  &quot;metadata&quot;: {
    &quot;result&quot;: &quot;ok&quot;
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p><span class="notranslate"><code>web_server_config_path</code></span> should point to a path that is added as <span class="notranslate"><code>IncludeOptional</code></span> in this domain&#39;s virtual host e.g., <span class="notranslate"><code>/path/to/example.com/specific/config/to/include</code></span> path should be added for the <span class="notranslate"><code>example.com</code></span> domain.</p><h2 id="integration-config-file" tabindex="-1"><a class="header-anchor" href="#integration-config-file" aria-hidden="true">#</a> Integration config file</h2><p>The documentation for the Imunify360 Stand-alone version integration configuration file format.</p><p><strong>Location</strong> <span class="notranslate"><code>/etc/sysconfig/imunify360/integration.conf</code></span></p><p><strong>Parameters</strong></p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[paths]
ui_path = /var/www/vhosts/imunify360/imunify360.hosting.example.com/html/im360
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div><p>The path to the web server directory, where Imunify360 will be installed and served by web server. Need to be defined before Imunify360 installation.</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[paths]
ui_path_owner = panel_user:web_server_group
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div><p>Allows executing <code>chown</code> to that owner for files after installation. The parameter is optional, if it is absent, <code>chown</code> doesn&#39;t execute.</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[pam]
service_name = system-auth
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div><p>The PAM service is used for user authentication in the Imunify360 UI application. By default the <span class="notranslate"><code>system-auth</code></span> service is used.</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[integration_scripts]
panel_info = /path/to/panel_info.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div><p>The path to the executable script that generates a JSON file with the information about hosting panel.</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
  &quot;data&quot;: {
      &quot;name&quot;: &quot;CustomHostingPanel&quot;,
      &quot;version&quot;: &quot;admin&quot;,
  },
  &quot;metadata&quot;: {
    &quot;result&quot;: &quot;ok&quot;
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[integration_scripts]
admins = /path/to/get-admins-script.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div><p>The path to the executable script that generates a JSON file with the list of admin accounts.</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
  &quot;data&quot;: [
    {
      &quot;name&quot;: &quot;admin1&quot;,
      &quot;unix_user&quot;: &quot;admin&quot;,
      &quot;locale_code&quot;: &quot;EN_us&quot;,
      &quot;email&quot;: &quot;admin1@domain.zone&quot;,
      &quot;is_main&quot;: true
    },
	{
      &quot;name&quot;: &quot;admin2&quot;,
      &quot;unix_user&quot;: &quot;admin&quot;,
      &quot;locale_code&quot;: &quot;Ru_ru&quot;,
      &quot;email&quot;: &quot;admin2@domain.zone&quot;,
      &quot;is_main&quot;: false
    }
  ],
  &quot;metadata&quot;: {
    &quot;result&quot;: &quot;ok&quot;
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[integration_scripts]
users = /path/to/get-users-script.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div><p>The script to provide the specific list of users used by Imunify360.</p><p>It should point to an executable file that generates a JSON file similar to the following (domains are optional):</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
  &quot;data&quot;: [
    {
      &quot;id&quot;: 1000,
      &quot;username&quot;: &quot;ins5yo3&quot;,
      &quot;owner&quot;: &quot;root&quot;,
      &quot;domain&quot;: &quot;ins5yo3.com&quot;,
      &quot;package&quot;: {
        &quot;name&quot;: &quot;package&quot;,
        &quot;owner&quot;: &quot;root&quot;
      },
      &quot;email&quot;: &quot;ins5yo3@ins5yo3.com&quot;,
      &quot;locale_code&quot;: &quot;EN_us&quot;
    },
    {
      &quot;id&quot;: 1001,
      &quot;username&quot;: &quot;ins5yo4&quot;,
      &quot;owner&quot;: &quot;root&quot;,
      &quot;domain&quot;: &quot;ins5yo4.com&quot;,
      &quot;package&quot;: {
        &quot;name&quot;: &quot;package&quot;,
        &quot;owner&quot;: &quot;root&quot;
      },
      &quot;email&quot;: &quot;ins5yo4@ins5yo4.com&quot;,
      &quot;locale_code&quot;: &quot;EN_us&quot;
    }
  ],
  &quot;metadata&quot;: {
    &quot;result&quot;: &quot;ok&quot;
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h4 id="data-description" tabindex="-1"><a class="header-anchor" href="#data-description" aria-hidden="true">#</a> Data description</h4><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>Key</td><td>Nullable</td><td>Description</td></tr><tr><td><span class="notranslate"><code>id</code></span></td><td><span class="notranslate"><code>False</code></span></td><td>ID of the UNIX account in the system.</td></tr><tr><td><span class="notranslate"><code>username</code></span></td><td><span class="notranslate"><code>False</code></span></td><td>The name of the UNIX account in the system.</td></tr><tr><td><span class="notranslate"><code>owner</code></span></td><td><span class="notranslate"><code>True</code></span></td><td>The name of the account owner. The owner can be an administrator (in this case he should be included in the <span class="notranslate"><code>admins()</code></span> output) or a reseller (in this case he should be included in the <span class="notranslate"><code>resellers()</code></span> output).</td></tr><tr><td><span class="notranslate"><code>locale_code</code></span></td><td><span class="notranslate"><code>True</code></span></td><td>The locale selected by a user.</td></tr><tr><td><span class="notranslate"><code>email</code></span></td><td><span class="notranslate"><code>True</code></span></td><td>Email of the account user. If there is no email, it should return null.</td></tr><tr><td><span class="notranslate"><code>domain</code></span></td><td><span class="notranslate"><code>True</code></span></td><td>The main domain of a user.</td></tr><tr><td><span class="notranslate"><code>package</code></span></td><td><span class="notranslate"><code>True</code></span></td><td>Information about the package to which a user belongs to. If the user doesnâ€™t belong to any package, it should return null.</td></tr><tr><td><span class="notranslate"><code>package.name</code></span></td><td><span class="notranslate"><code>False</code></span></td><td>The name of the package to which a user belongs to.</td></tr><tr><td><span class="notranslate"><code>package.owner</code></span></td><td><span class="notranslate"><code>True</code></span></td><td>The owner of the package to which a user belongs to (reseller or administrator).</td></tr></tbody></table><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[integration_sctipts]
domains = /path/to/get-domains-script.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div><p>It should point to an executable file that generates a JSON file similar to the following</p><div class="notranslate"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
  &quot;data&quot;: {
    &quot;example.com&quot;: {
      &quot;document_root&quot;: &quot;/home/username/public_html/&quot;,
      &quot;is_main&quot;: true,
      &quot;owner&quot;: &quot;username&quot;
    },
    &quot;subdomain.example.com&quot;: {
      &quot;document_root&quot;: &quot;/home/username/public_html/subdomain/&quot;,
      &quot;is_main&quot;: false,
      &quot;owner&quot;: &quot;username&quot;
    }
  },
  &quot;metadata&quot;: {
    &quot;result&quot;: &quot;ok&quot;
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p><span class="notranslate"><code>web_server_config_path</code></span> should point to a path that is added as <span class="notranslate"><code>IncludeOptional</code></span> in this domain&#39;s virtual host e.g., <span class="notranslate"><code>/path/to/example.com/specific/config/to/include</code></span> path should be added for the <span class="notranslate"><code>example.com</code></span> domain.</p>`,33);function E(A,C){const a=d("router-link"),s=d("RouterLink");return r(),c("div",null,[m,e("nav",v,[e("ul",null,[e("li",null,[i(a,{to:"#introduction"},{default:t(()=>[n("Introduction")]),_:1})]),e("li",null,[i(a,{to:"#prerequisites"},{default:t(()=>[n("Prerequisites")]),_:1})]),e("li",null,[i(a,{to:"#configure-imunify360-integrations"},{default:t(()=>[n("Configure Imunify360 integrations")]),_:1})]),e("li",null,[i(a,{to:"#install-imunify360"},{default:t(()=>[n("Install Imunify360")]),_:1})]),e("li",null,[i(a,{to:"#settings-related-to-stand-alone-version"},{default:t(()=>[n("Settings related to Stand-alone version")]),_:1})]),e("li",null,[i(a,{to:"#integration-config-file"},{default:t(()=>[n("Integration config file")]),_:1})])])]),p,h,g,e("ul",null,[e("li",null,[n("No support for managing disabled rules yet. See also: "),i(s,{to:"/dashboard/#disabled-rules"},{default:t(()=>[n("Disabled rules")]),_:1})])]),b,e("ol",null,[e("li",null,[n("Install and configure the "),i(s,{to:"/control_panel_integration/#prerequisites"},{default:t(()=>[n("prerequisites")]),_:1}),n(" like like ModSecurity, PHP with JSON support, and other common WEB server packages.")]),f,q,x]),y,e("p",null,[n("All integrations set in the integration config file like "),_,n(". You can find more details on the config file "),i(s,{to:"/control_panel_integration/#integration-config-file"},{default:t(()=>[n("here")]),_:1}),n(", get a "),w,n(" or check the "),I,n(".")]),S,e("p",null,[n("You can get a token which can be used for authentication using the "),i(s,{to:"/command_line_interface/#login"},{default:t(()=>[k,n(" command")]),_:1}),n(".")]),N,e("p",null,[n("The installation instructions are the same as for cPanel/Plesk/DirectAdmin version and can be found in the "),i(s,{to:"/installation/#installation-instructions"},{default:t(()=>[n("Imunify360 documentation")]),_:1}),n(".")]),T,e("p",null,[n("It should point to an executable file that generates a JSON file similar to the following (see details "),i(s,{to:"/stand_alone/#integration-config-file"},{default:t(()=>[n("here")]),_:1}),n("):")]),M])}const L=l(u,[["render",E],["__file","index.html.vue"]]);export{L as default};
